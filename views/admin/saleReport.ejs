<%- include("../layouts/admin/header")%>
<section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Sale Report </h2>
        <p>Lorem ipsum dolor sit amet.</p>
      </div>
      <div>
        <input type="text" placeholder="Search order ID" class="form-control bg-white">
        <br>
        <button onclick="downloadPDF()" class="btn btn-md rounded font-sm hover-up">download pdf</button>
        <button onclick="downloadExcel()" class="btn btn-md rounded font-sm hover-up">Download Excel</button>


      </div>
    </div>
    <div>

    </div>
    <div class="card mb-4">
      <header class="card-header">
        <div class="row gx-3">
          <div class="col-lg-4 col-md-6 me-auto">
            <input type="text" placeholder="Search..." class="form-control">
          </div>
          <div class="col-md-2 col-6">
            <input type="date" id="startDate" class="form-control" placeholder="Start Date" value="">
        </div>
        <div class="col-md-2 col-6">
            <input type="date" id="endDate" class="form-control" placeholder="End Date" value="">
        </div>
        <button onclick="updateSalesReport()" class="btn btn-sm btn-primary float-right">Generate Report</button>
        <style>
          .float-right {
              float: right;
          }
          .btn {
    /* Add any desired styles for the button */
    width: auto; /* Reset button width to auto */
}
        </style>
        
        <div class="col-lg-2 col-6 col-md-3">
          <select class="form-select" id="filterOptions" onchange="filterSalesReport()">
              
              <option value="monthly">Monthly</option>
              <option value="yearly">Yearly</option>
              <option value="daily">Daily</option>
              <option value="all">Show all</option>
          </select>
      </div>
      
          <div class="col-lg-2 col-6 col-md-3">
         
        </div>
      </header> <!-- card-header end// -->
      <div class="card-body">
        <div class="table-responsive">
          <!-- saleReport.ejs -->

          <table class="table table-hover">
            <thead>
              <tr>
                <th> ORDER ID</th>
                <th scope="col">Date</th>
                <th scope="col">Customer</th>

                <th scope="col">Product</th>

                <th scope="col">Quantity</th>
                <th scope="col">Total</th>
                <th scope="col">Status</th>
                <th scope="col">Payment Method</th>
              </tr>
            </thead>
            <tbody>
              <!-- for loop using ejs -->
              <% for (const order of orders) { %>
                <% for (let j=0; j < order.products.length; j++) { %>
                  <% const currentProduct=order.products[j].product; %>
                    <tr>
                      <td>
                        <%= order._id %>
                      </td>
                      <td>
                        <%= order.createdOn.toLocaleDateString() %>
                      </td>
                      <% if (order.user) { %>
                        <td>
                          <%= order.user.username %>
                        </td>
                        <% } else { %>
                          <td>User not available</td>
                          <% } %>
                            <!-- Check if currentProduct is not null before accessing its properties -->
                            <td>
                              <% if (currentProduct && currentProduct.product && currentProduct.product.productName) { %>
                                <%= currentProduct.product.productName %>
                              <% } else { %>
                                Product
                              <% } %>
                            </td>
                            
                            <td>
                              
                              <%= order.products[j].quantity %>
                            </td>
                            <td>
                              <%= order.totalPrice %>
                            </td>
                            <td><span class="badge rounded-pill alert-success">Delivered</span></td>
                            <td>
                              <%= order.payment %>
                            </td>
                    </tr>
                    <% } %>
                      <% } %>
            </tbody>
          </table>


        </div> <!-- table-responsive //end -->
      </div> <!-- card-body end// -->
    </div> <!-- card end// -->
   <!-- Pagination Controls -->
   <div class="pagination">
    <a href="?page=1">&laquo; </a>
    <% for(let i = 1; i <= totalPages; i++) { %>
      <a href="?page=<%= i %>" <%= currentPage == i ? 'class="active"' : '' %>><%= i %></a>
    <% } %>
    <a href="?page=<%= totalPages %>"> &raquo;</a>
  </div>
  
    <style>
  .pagination {
    display: inline-block;
  }
  .pagination a {
    color: black;
    float: left;
    padding: 8px 16px;
    text-decoration: none;
    transition: background-color .3s;
    border: 1px solid #ddd;
    margin: 0 4px;
  }
  .pagination a.active {
    background-color: #4CAF50;
    color: white;
    border: 1px solid #4CAF50;
  }
  .pagination a:hover:not(.active) {background-color: #ddd;}
</style>
  

  </section> <!-- content-main end// -->
  <footer class="main-footer font-xs">
    <div class="row pb-30 pt-15">
      <div class="col-sm-6">
        <script data-cfasync="false"
          src="../../../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script>
        <script>
          document.write(new Date().getFullYear())
        </script> Â©, Evara - HTML Ecommerce Template .
      </div>
      <div class="col-sm-6">
        <div class="text-sm-end">
          All rights reserved
        </div>
      </div>
    </div>
  </footer>

</main>

<script>
    async function downloadPDF() {
    try {
      const startDate = document.getElementById('startDate').value;
      const endDate = document.getElementById('endDate').value;
    
      console.log(startDate,endDate)
      if (!startDate || !endDate) {
        console.error('Please select start and end dates.');
        return;
      }
      // Construct the query string with start and end datesst
      const queryString = `?startDate=${startDate}&endDate=${endDate}`;
      console.log('QUERY',queryString)
      const response = await fetch(`/admin/download-pdf${queryString}`);
      const blob = await response.blob();

      // Create a link element and trigger a click to start the download
      const link = document.createElement('a');
      link.href = window.URL.createObjectURL(blob);
      link.download = 'sale_report.pdf';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    } catch (error) {
      console.error('Error downloading PDF:', error);
    }
  }

  
  async function downloadExcel() {
    try {
      const startDate = document.getElementById('startDate').value;
      const endDate = document.getElementById('endDate').value;
  
      // Construct the query string with start and end dates
      const queryString = `?startDate=${startDate}&endDate=${endDate}`;
      const response = await fetch(`/admin/download-excel${queryString}`);
      const blob = await response.blob();
  
      // Create a link element and trigger a click to start the download
      const link = document.createElement('a');
      link.href = window.URL.createObjectURL(blob);
      link.download = 'sale_report.xlsx';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    } catch (error) {
      console.error('Error downloading Excel:', error);
    }
  }
  window.addEventListener('DOMContentLoaded', (event) => {
    const urlParams = new URLSearchParams(window.location.search);
    const startDate = urlParams.get('startDate');
    const endDate = urlParams.get('endDate');

    // Populate input fields if start and end dates are present in the URL parameters
    if (startDate && endDate) {
        document.getElementById('startDate').value = startDate;
        document.getElementById('endDate').value = endDate;
    }
});

  function updateSalesReport() {
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
  
    // Redirect to the API URL with both start and end dates
    window.location.href = `/admin/saleReport?startDate=${startDate}&endDate=${endDate}`;
  }
  
  function filterSalesReport() {
    const filterOption = document.getElementById('filterOptions').value;
  
    // Construct the API URL based on the selected filter option
    let apiUrl = '/admin/saleReport';
    if (filterOption === 'yearly' || filterOption === 'monthly' || filterOption === 'daily') {
      apiUrl += `?filter=${filterOption}`;
    }
    // Redirect to the API URL to fetch the filtered sales report
    window.location.href = apiUrl;
  }
  </script>
  


<%- include("../layouts/admin/footer")%>